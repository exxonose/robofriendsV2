{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAaeA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BL,EAA1B,cACpB,gCACI,6BAAKC,IACL,4BAAIC,WCmBLI,EAvBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIf,OACI,gCAEGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACA,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,MALT,QCKOC,EAXG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,kCACjBU,KAAK,SACLC,YAAY,eAAeC,SAAYH,OCGpCI,EARA,SAACC,GACb,OACG,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,YCkBFC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACtBC,KAAKC,SAAY,CAACJ,UAAU,K,oBAG/B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEHG,KAAKX,MAAMK,a,GAhBCQ,aCiDbC,G,wDA1Cb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAClB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAdvC,EAAKZ,MAAQ,CACXjB,OAAQ,GACT2B,YAAa,IAJF,E,qDAQb,WAAoB,IAAD,OACjBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKZ,SAAS,CAACtB,OAAOkC,S,oBAQzC,WAAU,IAAD,EACuBb,KAAKJ,MAA5BjB,EADA,EACAA,OAAQ2B,EADR,EACQA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASZ,EAAYW,kBAEvD,OAAQtC,EAAOwC,OAGb,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,6BACA,cAAC,EAAD,CAAYS,aAAcgB,KAAKI,iBAChC,cAAC,EAAD,UACE,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAUmC,WAPnB,gD,GA3BQZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAChBC,SAASC,eAAe,SAMxBX,M","file":"static/js/main.8de30817.chunk.js","sourcesContent":["import React from \"react\";\nconst Card = ({id, name, email}) => {\n    return (\n        <div className='tc bg--light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robot' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => { \n    // if (true){\n    //     throw new Error('Nooooooo!!!');\n    //  }\n    return (\n        <div>\n       {\n           robots.map((user, i) => {\n            return (\n            <Card \n            key={i} \n            id={robots[i].id} \n            name={robots[i].name} \n            email={robots[i].email}\n            />\n            );\n        })\n\n       };\n  </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input className='pa3 ba b--green bg-lightestblue' \n            type='search' \n            placeholder='search robot' onChange = {searchChange} />\n        </div>\n        \n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n   return(\n      <div style={{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n          {props.children}\n      </div>\n   )\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n      \n    componentDidCatch(error, info){\n       this.setState = ({hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError){\n            return <h1>Oooops. That's not good</h1>\n        }\n         return this.props.children;\n    }   \n    \n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n     searchfield: ''\n    }\n  }\n\n   componentDidMount(){\n     fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response => response.json())\n     .then(users => {this.setState({robots:users})});\n   }\n\n\n  onSearchChange = (event) => {\n  this.setState({searchfield: event.target.value});\n}\n\n  render() {\n    const {robots, searchfield} = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    return !robots.length ?\n          <h1>Loading...</h1>:\n        (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends App</h1>\n        <SearchBox  searchChange={this.onSearchChange}/>\n       <Scroll>\n         <ErrorBoundary>\n         <CardList robots = {filteredRobots}/>\n         </ErrorBoundary>\n       </Scroll>\n      </div>\n      \n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />,\ndocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}